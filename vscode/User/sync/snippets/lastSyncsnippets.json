{"ref":"0f6757d7-0464-42de-ab89-cc7be25905a0","syncData":{"version":1,"machineId":"05a8c92f-8512-4804-b98e-5430e9a83f81","content":"{\"global.code-snippets\":\"{\\n  \\\"const\\\": {\\n    \\\"prefix\\\": \\\"const\\\",\\n    \\\"body\\\": \\\"const ${1:name} = ${0};\\\"\\n  },\\n  \\\"ternary statement\\\": {\\n    \\\"prefix\\\": \\\"te\\\",\\n    \\\"body\\\": \\\"${1:cond} ? ${2:true} : ${3: false}\\\"\\n  },\\n  \\\"🦆 console.log()\\\": {\\n    \\\"scope\\\": \\\"javascript,javascriptreact,typescript,typescriptreact\\\",\\n    \\\"prefix\\\": \\\"cl\\\",\\n    \\\"body\\\": [\\n      \\\"console.log('${1|🦀,🦜,🌭,🐷,🦆,🌮,🍟,🌽,🥐,🫒,🍪,🚀,🎉,💪,🤷‍♂️,🕵️‍♂️,🛳️,🐙,🍄,🐴|}', $2)\\\",\\n      \\\"$0\\\"\\n    ],\\n    \\\"description\\\": \\\"Log output to console\\\"\\n},\\n  \\\"template string\\\": {\\n    \\\"prefix\\\": \\\"ts\\\",\\n    \\\"body\\\": [\\n      \\\"`${$1}`\\\",\\n    ],\\n  },\\n  \\\"useState\\\": {\\n    \\\"prefix\\\": \\\"useState\\\",\\n    \\\"body\\\": [\\n      \\\"const [${1}, set${2}] = useState(${3});${0}\\\",\\n    ],\\n  },\\n  \\\"useEffect\\\": {\\n    \\\"prefix\\\": \\\"useEffect\\\",\\n    \\\"body\\\": [\\n      \\\"useEffect(() => {\\\",\\n      \\\" ${1}\\\",\\n      \\\"}, [${2}]);${0}\\\"\\n    ]\\n  },\\n  \\\"beforeEach test\\\": {\\n    \\\"prefix\\\": \\\"beforeEach\\\",\\n    \\\"body\\\": [\\n      \\\"beforeEach(() => {\\\",\\n      \\\"  ${1}\\\",\\n      \\\"});\\\"\\n    ]\\n  },\\n  \\\"afterEach test\\\": {\\n    \\\"prefix\\\": \\\"afterEach\\\",\\n    \\\"body\\\": [\\n      \\\"afterEach(() => {\\\",\\n      \\\"  ${1}\\\",\\n      \\\"});\\\"\\n    ]\\n  },\\n  \\\"describe test\\\": {\\n    \\\"prefix\\\": \\\"describe\\\",\\n    \\\"body\\\": [\\n      \\\"describe('${1:description}', () => {\\\",\\n      \\\"  ${0}\\\",\\n      \\\"});\\\"\\n    ]\\n  },\\n  \\\"it test\\\": {\\n    \\\"prefix\\\": \\\"it\\\",\\n    \\\"body\\\": [\\n      \\\"it('${1:description}', () => {\\\",\\n      \\\"  ${0}\\\",\\n      \\\"});\\\"\\n    ]\\n  },\\n  \\\"map\\\": {\\n    \\\"prefix\\\": \\\"map\\\",\\n    \\\"body\\\": [\\n      \\\"${1:iterable}.map(${2:item} => \\\",\\n      \\\"  ${0}\\\",\\n      \\\")\\\"\\n    ]\\n  },\\n  \\\"filter\\\": {\\n    \\\"prefix\\\": \\\"filter\\\",\\n    \\\"body\\\": [\\n      \\\"${1:iterable}.filter((${2:item}) => {\\\",\\n      \\\"  ${0}\\\",\\n      \\\"})\\\"\\n    ]\\n  },\\n  \\\"reduce\\\": {\\n    \\\"prefix\\\": \\\"reduce\\\",\\n    \\\"body\\\": [\\n      \\\"${1:iterable}.reduce((${2:curr}, ${3:val}) => {\\\",\\n      \\\"  ${0}\\\",\\n      \\\"}${4:, initial})\\\"\\n    ]\\n  },\\n  \\\"find\\\": {\\n    \\\"prefix\\\": \\\"find\\\",\\n    \\\"body\\\": [\\n      \\\"${1:iterable}.find((${2:item}) => {\\\",\\n      \\\"  ${0}\\\",\\n      \\\"})\\\"\\n    ]\\n  },\\n  \\\"return a promise\\\": {\\n    \\\"prefix\\\": \\\"returnpromise\\\",\\n    \\\"body\\\": [\\n      \\\"return new Promise((resolve, reject) => {\\\",\\n      \\\"  ${0}\\\",\\n      \\\"})\\\"\\n    ]\\n  },\\n  \\\"import x from 'x'\\\": {\\n    \\\"prefix\\\": \\\"imp\\\",\\n    \\\"body\\\": \\\"import { $1 } from '../$2';$0\\\"\\n  },\\n  \\\"import React from 'react'\\\": {\\n    \\\"prefix\\\": \\\"impr\\\",\\n    \\\"body\\\": \\\"import React from 'react';\\\"\\n  },\\n  \\\"throw log\\\": {\\n    \\\"prefix\\\": \\\"tl\\\",\\n    \\\"body\\\": \\\"throw new Error(JSON.stringify({$0}, null, 2))\\\"\\n  },\\n  \\\"try/catch\\\": {\\n    \\\"prefix\\\": \\\"try\\\",\\n    \\\"body\\\": [\\n      \\\"try {\\\",\\n      \\\"  $1\\\",\\n      \\\"} catch (error) {\\\",\\n      \\\"  $0\\\",\\n      \\\"}\\\"\\n    ]\\n  },\\n  \\\"async function\\\": {\\n    \\\"prefix\\\": \\\"async\\\",\\n    \\\"body\\\": [\\n      \\\"async function $1($2) {\\\",\\n      \\\"  $0\\\",\\n      \\\"}\\\"\\n    ]\\n  },\\n  \\\"spaced console.log\\\": {\\n    \\\"prefix\\\": \\\"scl\\\",\\n    \\\"body\\\": [\\n      \\\"console.log('**************************************************************************\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n')\\\",\\n      \\\"console.log($0)\\\",\\n      \\\"console.log('\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**************************************************************************')\\\"\\n    ]\\n  },\\n}\\n\",\"typescriptreact.json\":\"// put this in your typescriptreact.json snippets file. Command palette → Snippets: Configure User Snippets → typescriptreact\\n{\\n  \\\"React useState\\\": {\\n    \\\"prefix\\\": \\\"us\\\",\\n    \\\"body\\\": [\\n      \\\"const [$1, set${1/(.*)/${1:/capitalize}/}] = useState(${2:default${1/(.*)/${1:/capitalize}/}})\\\"\\n    ],\\n    \\\"description\\\": \\\"Camel cased use state\\\"\\n  },\\n  \\\"React useEffect\\\": {\\n    \\\"prefix\\\": \\\"ue\\\",\\n    \\\"body\\\": [\\n      \\\"useEffect(() => {\\\",\\n      \\\"  $1\\\",\\n      \\\"}, [$2]);\\\"\\n    ]\\n  },\\n  \\\"React useCallback\\\": {\\n    \\\"prefix\\\": \\\"ucb\\\",\\n    \\\"body\\\": [\\n      \\\"useCallback(() => {\\\",\\n      \\\"  $1\\\",\\n      \\\"}, [$2]);\\\"\\n    ]\\n  },\\n  \\\"React useMemo\\\": {\\n    \\\"prefix\\\": \\\"umm\\\",\\n    \\\"body\\\": [\\n      \\\"useMemo(() => {\\\",\\n      \\\"  $1\\\",\\n      \\\"}, [$2]);\\\"\\n    ]\\n  },\\n  \\\"Async React Function Component\\\": {\\n    \\\"prefix\\\": \\\"arjsfc\\\",\\n    \\\"body\\\": [\\n      \\\"const $1 = async () => {\\\",\\n      \\\"  return $2;\\\",\\n      \\\"};\\\",\\n      \\\"\\\",\\n      \\\"export default $1;\\\"\\n    ]\\n  },\\n  \\\"Async React Function Component with Props\\\": {\\n    \\\"prefix\\\": \\\"arjsfcp\\\",\\n    \\\"body\\\": [\\n      \\\"interface $1Props {}\\\",\\n      \\\"\\\",\\n      \\\"const $1 = async ({}: $1Props) => {\\\",\\n      \\\"  return $2;\\\",\\n      \\\"};\\\",\\n      \\\"\\\",\\n      \\\"export default $1;\\\"\\n    ]\\n  },\\n  \\\"React Function Component\\\": {\\n    \\\"prefix\\\": \\\"rjsfc\\\",\\n    \\\"body\\\": [\\n      \\\"const $1 = () => {\\\",\\n      \\\"  return $2;\\\",\\n      \\\"};\\\",\\n      \\\"\\\",\\n      \\\"export default $1;\\\"\\n    ]\\n  },\\n  \\\"React Function Component with Props\\\": {\\n    \\\"prefix\\\": \\\"rjsfcp\\\",\\n    \\\"body\\\": [\\n      \\\"interface $1Props {}\\\",\\n      \\\"\\\",\\n      \\\"const $1 = ({}: $1Props) => {\\\",\\n      \\\"  return $2;\\\",\\n      \\\"};\\\",\\n      \\\"\\\",\\n      \\\"export default $1;\\\"\\n    ]\\n  },\\n  \\\"React Custom Hook\\\": {\\n    \\\"prefix\\\": \\\"rjsch\\\",\\n    \\\"body\\\": [\\n      \\\"export const use$1 = () => {$2}\\\",\\n    ]\\n  },\\n  \\\"Describe Test\\\": {\\n    \\\"prefix\\\": \\\"jdesc\\\",\\n    \\\"body\\\": [\\n      \\\"describe ('$1', () => {\\\",\\n      \\\"  it('$2', () => {\\\",\\n      \\\"    $3\\\",\\n      \\\"    expect(1).toEqual(2)\\\",\\n      \\\"  })\\\",\\n      \\\"})\\\"\\n    ]\\n  }\\n}\\n\"}"}}